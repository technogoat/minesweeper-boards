class BoardsController < ApplicationController
  before_action :set_board, only: %i[show grid]

  def home
    @boards = Board.order(created_at: :desc).limit(10)
  end

  # GET /boards
  def index; end

  def all
    @heading_columns = [
      { sort_by: 'name', label: 'Name' },
      { sort_by: 'width', label: 'Width' },
      { sort_by: 'height', label: 'Height' },
      { sort_by: 'bombs', label: 'Bombs' },
      { sort_by: 'email', label: 'Generated by' },
      { sort_by: 'created_at', label: 'Generated at' }
    ]
    @pagy, @boards = pagy(Board.order(index_params), items: 20)
  end

  # GET /boards/1
  def show; end

  def grid
    render partial: 'grid', locals: { board: @board }
  end

  # GET /boards/new
  def new
    @board = Board.new
  end

  # POST /boards
  def create
    @board = Board.new(board_params)

    respond_to do |format|
      if @board.save
        format.html { redirect_to board_url(@board), notice: 'Board was successfully created.' }
      else
        format.html { render :new, status: :unprocessable_entity }
      end
    end
  end

  private

  # Use callbacks to share common setup or constraints between actions.
  def set_board
    @board = Board.find(params[:id])
  end

  # Only allow a list of trusted parameters through.
  def board_params
    params.require(:board).permit(:email, :name, :width, :height, :bombs)
  end

  # Set default sort by params
  def index_params
    "#{params[:sort_by] || 'created_at'} #{params[:direction] || 'desc'}"
  end
end
